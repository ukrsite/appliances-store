jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for versioning

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to Azure Container Registry (ACR)
        run: |
          # Get ACR credentials using Azure CLI
          ACR_USERNAME=$(az acr credential show --name ${{ env.REGISTRY }} --query "username" --output tsv)
          ACR_PASSWORD=$(az acr credential show --name ${{ env.REGISTRY }} --query "passwords[0].value" --output tsv)

          # Log in to ACR using Docker
          echo $ACR_PASSWORD | docker login ${{ env.REGISTRY }} --username $ACR_USERNAME --password-stdin

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Logout from Azure Container Registry (ACR)
        run: |
          docker logout ${{ env.REGISTRY }}
  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Version from Git
        id: version
        run: |
          echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Update Helm Values.yaml
        uses: mikefarah/yq@master
        with:
          cmd: yq eval -i '.image.tag=env(VERSION)' helm/values.yaml

      - name: Update Helm Chart Version
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.version=strenv(VERSION)' helm/Chart.yaml

      - name: Validate Helm Chart Updates
        run: |
          echo "Updated values.yaml:"
          cat helm/values.yaml
          echo "Updated Chart.yaml:"
          cat helm/Chart.yaml

      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add helm/values.yaml helm/Chart.yaml
          git diff-index --quiet HEAD || git commit -m "CI: Update to version $VERSION"
          git push